name: cosmic-atomic-rawhide

on:
  pull_request:
  merge_group:
  schedule:
    - cron: '0 15 * * *'  # 3pm UTC everyday (timed against official fedora container pushes)
  workflow_dispatch:

env:
  IMAGE_REGISTRY: ghcr.io/${{ github.repository_owner }}

jobs:
  build:
    name: Build 
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write
    strategy:
      fail-fast: false
      matrix:
        arch: [amd64]
        version: [40, rawhide]
        flavor: [base]
    steps:
      # Checkout push-to-registry action GitHub repository
      - name: Checkout Push to Registry action
        uses: actions/checkout@v4

      - name: Generate tags
        id: generate-tags
        shell: bash
        run: |
          # Generate a timestamp for creating an image version history
          TIMESTAMP="$(date +%Y%m%d)"
          MAJOR_VERSION="$(echo ${{ matrix.version }} | cut -d . -f 1)"
          COMMIT_TAGS=()
          BUILD_TAGS=()
          # Have tags for tracking builds during pull request
          SHA_SHORT="${GITHUB_SHA::7}"

          # Using clever bash string templating, https://stackoverflow.com/q/40771781
          # don't make malformed tags if $MAJOR_VERSION is empty (base-image didn't include proper labels) --
          COMMIT_TAGS+=("${SHA_SHORT}${MAJOR_VERSION:+-$MAJOR_VERSION}")
          BUILD_TAGS=("${MAJOR_VERSION}" "${MAJOR_VERSION}-${{ matrix.arch }}" "${MAJOR_VERSION:+$MAJOR_VERSION-}${TIMESTAMP}" "${MAJOR_VERSION:+$MAJOR_VERSION-}${TIMESTAMP}-${{ matrix.arch }}")
          # --
          if [ "${MAJOR_VERSION}" == "rawhide" ]; then
            BUILD_TAGS+=("${TIMESTAMP}")
            BUILD_TAGS+=("latest-${{ matrix.arch }}")
          fi
          
          alias_tags=("${BUILD_TAGS[@]}")
          echo "Generated the following build tags: "
          for TAG in "${BUILD_TAGS[@]}"; do
              echo "${TAG}"
          done
          echo "alias_tags=${alias_tags[*]}" >> $GITHUB_OUTPUT

      # Build metadata
      - name: Image Metadata
        uses: docker/metadata-action@v5
        id: meta
        with:
          images: |
            cosmic-rawhide-${{ matrix.flavor }}
          labels: |
            org.opencontainers.image.title=cosmic-rawhide-${{ matrix.flavor }}
            org.opencontainers.image.version=${{ matrix.version }}
            org.opencontainers.image.description=${{ env.description }}
            io.artifacthub.package.readme-url=https://raw.githubusercontent.com/ryanabx/cosmic/main/README.md
            io.artifacthub.package.logo-url=https://avatars.githubusercontent.com/u/120078124?s=200&v=4

      - name: Install qemu dependency
        run: |
          sudo apt-get update
          sudo apt-get install -y qemu-user-static
     
      - name: matrix-variables
        run: |
          echo "SOURCE_ORG=quay.io/fedora-ostree-desktops" >> $GITHUB_ENV
          echo "SOURCE_IMAGE=${{ matrix.flavor }}" >> $GITHUB_ENV

      # Build image using Buildah action
      - name: Build Image
        id: build_image
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            Containerfile
          image: cosmic-rawhide-${{ matrix.flavor }}
          tags: |
            ${{ steps.generate-tags.outputs.alias_tags }}
          archs: ${{ matrix.arch }}
          build-args: |
            FEDORA_MAJOR_VERSION=${{ matrix.version }}
            SOURCE_IMAGE=${{ env.SOURCE_IMAGE }}
            SOURCE_ORG=${{ env.SOURCE_ORG }}
          oci: false

      # Workaround bug where capital letters in your GitHub username make it impossible to push to GHCR.
      # https://github.com/macbre/push-to-ghcr/issues/12
      - name: Lowercase Registry
        id: registry_case
        uses: ASzc/change-string-case-action@v6
        with:
          string: ${{ env.IMAGE_REGISTRY }}
      
      - name: Push To GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: github.event_name != 'pull_request'
        env:
          REGISTRY_USER: ${{ github.repository_owner }}
          REGISTRY_PASSWORD: ${{ secrets.GITHUB_TOKEN }}
        with:
          image: ${{ steps.build_image.outputs.image }}
          tags: ${{ steps.build_image.outputs.tags }}
          registry: ${{ steps.registry_case.outputs.lowercase }}
          username: ${{ env.REGISTRY_USER }}
          password: ${{ env.REGISTRY_PASSWORD }}
          extra-args: |
            --disable-content-trust

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        if: github.event_name != 'pull_request'
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
